;; Comments are prefixed by double-semicolon. A single semicolon is parsed as the
;; keyboard key. Comments are ignored for the configuration file.
;;
;; This configuration language is Lisp-like. If you're unfamiliar with Lisp,
;; don't be alarmed. The maintainer jtroo is also unfamiliar with Lisp. You
;; don't need to know Lisp in-depth to be able to configure kanata.
;;
;; If you follow along with the examples, you should be fine. Kanata should
;; also hopefully have helpful error messages in case something goes wrong.
;; If you need help, you are welcome to ask.

;; Keys to make usage of german keyboard as base layout possible
(deflocalkeys-linux
  ü 26
  ö 39
  ä 40
  ß 12
  # 43
  - 53
  < 86
)

;; Only one defsrc is allowed.
;;
;; defsrc defines the keys that will be intercepted by kanata. The order of the
;; keys matches with deflayer declarations and all deflayer declarations must
;; have the same number of keys as defsrc. Any keys not listed in defsrc will
;; be passed straight to the operating system.
(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    ß    =    bspc
  tab  q    w    e    r    t    z    u    i    o    p    ü    +    #
  caps a    s    d    f    g    h    j    k    l    ö    ä    ret
  lsft y    x    c    v    b    n    m    ,    .    -    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

;; Aliases for near normal us qwerty layout
(defalias
  ] (fork AG-9 AG-0 (lsft rsft)) ;; ] }
  [ (fork AG-8 (multi (release-key sft) AG-7) (lsft rsft)) ;; [ {
  \ (fork AG-ß (multi (release-key sft) AG-<) (lsft rsft)) ;; \ |
  = (fork S-0  +                              (lsft rsft)) ;; = +
  ; (fork S-,  S-.                            (lsft rsft)) ;; ; :
  ' (fork S-#  S-2                            (lsft rsft)) ;; ' "
  / (fork S-7  S-ß                            (lsft rsft)) ;; / ?
  , (fork ,    (multi (release-key sft) <)    (lsft rsft)) ;; , <
  . (fork .    S-<                            (lsft rsft)) ;; . >
  2 (fork 2    (multi (release-key sft) AG-q) (lsft rsft)) ;; 2 @
  3 (fork 3    (multi (release-key sft) #)    (lsft rsft)) ;; 3 #
  6 (fork 6    (multi (release-key sft) grv)  (lsft rsft)) ;; 6 ^
  7 (fork 7    S-6                            (lsft rsft)) ;; 7 &
  8 (fork 8    S-+                            (lsft rsft)) ;; 8 *
  9 (fork 9    S-8                            (lsft rsft)) ;; 9 (
  0 (fork 0    S-9                            (lsft rsft)) ;; 0 )
)

;; The first layer defined is the layer that will be active by default
;; when kanata starts up. This layer is mostly the standard QWERTY
;; layout except for the backtick/grave key (@grl) which is an alias for
;; a tap-hold key.
;;
;; There are currently a maximum of 25 layers allowed.
(deflayer qwerty
  @grl 1    @2   @3   4    5    @6   @7   @8   @9   @0   -    @=   bspc
  tab  q    w    e    r    t    y    u    i    o    p    @[   @]   @\
  @uml a    s    d    f    g    h    j    k    l    @;   @'    ret
  lsft z    x    c    v    b    n    m    @,   @.   @/   rsft
  lctl lmet lalt           spc            ralt rmet rctl
)

;; German Umlauts
(deflayer umlauts
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    ü    _    ö    _    _    _    _
  _    ä    ß    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _
)

(deflayer bulgarian
  @grl _    _    _    _    _    _    _    _    _    _    _    _    _
  _    AG-q AG-w AG-e AG-r AG-t AG-y AG-u AG-i AG-o AG-p AG-[ AG-] _
  XX   AG-a AG-s AG-d AG-f AG-g AG-h AG-j AG-k AG-l AG-ö AG-ä ret
  lsft AG-z AG-x AG-c AG-v AG-b AG-n AG-m AG-, AG-. AG-/ _
  lctl lmet lalt           spc            ralt rmet rctl
)

;; defalias is used to declare a shortcut for a more complicated action to keep
;; the deflayer declarations clean and aligned. The alignment in deflayers is not
;; necessary, but is strongly recommended for ease of understanding visually.
;;
;; Aliases are referred to by `@<alias_name>`.
(defalias
  ;; tap: backtick (grave), hold: toggle layer-switching layer while held
  grl (tap-hold 200 200 grv (layer-toggle layers))

  ;; layer-switch changes the base layer.
  qwr (layer-switch qwerty)
  bul (layer-switch bulgarian)
  uml (one-shot 15000 (layer-toggle umlauts))

  ;; tap for capslk, hold for lctl
  cap (tap-hold 200 200 caps lctl)
)

;; The `lrld` action stands for "live reload". This will re-parse everything
;; except for defcfg. I.e. in Linux, you cannot live reload and switch keyboard
;; devices for the time being.
;;
;; The keys 1 and 2 switch the base layer to qwerty and bulgarian respectively.
;;
;; Apart from the layer switching and live reload, all other keys are the
;; underscore _ which means "transparent". Transparent means the base layer
;; behaviour is used when pressing that key.
(deflayer layers
  _    @qwr @bul lrld _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _    _    _    _    _    _    _    _    _    _
  _    _    _              _              _    _    _
)

